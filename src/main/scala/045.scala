// Triangular, pentagonal, and hexagonal
// Problem 45
// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
//
// Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
// Pentagonal	 	Pn=n(3nâˆ’1)/2	 	1, 5, 12, 22, 35, ...
// Hexagonal	 	Hn=n(2nâˆ’1)	 	1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.
//
// Find the next triangle number that is also pentagonal and hexagonal.
import scala.io.Source
import math.{floor, sqrt}

object Euler045 extends App {
  println(Stream.from(144).map(n => n * (2 * n - 1)).filter(x => isTriangleNum(x) && isPentagonalNum(x)).head)

  def isSpecial(fn: Double => Double)(n: Double): Boolean = {
    val m: Double = fn(n)
    m - floor(m) == 0
  }
  def isTriangleNum(n: Double): Boolean = isSpecial({case x => (-1.0 + sqrt(1.0 + 8.0 * x)) / 2.0})(n)
  def isPentagonalNum(n: Double): Boolean = isSpecial({case x => (1.0 + sqrt(1.0 + 24.0 * x)) / 6.0})(n)
}
